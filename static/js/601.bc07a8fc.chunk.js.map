{"version":3,"file":"static/js/601.bc07a8fc.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/EventCard/EventCard.styled.js","components/EventCard/EventCard.jsx","components/EventsList/EventsList.styled.js","components/EventsList/EventsList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Events/Events.styled.js","pages/Events/Events.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    margin-bottom: 16px;\r\n    height: 30px;\r\n    border-radius: 8px;\r\n    border: 1px solid var(--divider-color);\r\n    padding: 5px;\r\n    outline: none;\r\n\r\n     @media screen and (min-width: 768px) {\r\n      width: 500px;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n    border: 1px solid var(--orange-color);\r\n    }\r\n`","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/filterSlice\";\r\n\r\nimport { Input } from './Filter.styled'\r\n\r\nconst Filter = ({ placeholder }) => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector((state) => state.filter.filter);\r\n  \r\n    const handleChange = (e) => {\r\n        dispatch(setFilter(e.target.value));\r\n    }\r\n    return (\r\n    <>\r\n       <Input\r\n        onChange={handleChange}\r\n        value={filter}\r\n        placeholder={placeholder}\r\n      >\r\n      </Input>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color: var(--text-color);\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 18px;    \r\n    }\r\n`;\r\n\r\nexport const Card = styled.li`\r\n    padding: 8px;\r\n    border-radius: 8px;\r\n    background-color: var(--add-bg-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 8px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        gap: 10px;\r\n        padding: 10px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        gap: 12px;\r\n        padding: 16px;   \r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    grid-column: 1 / 3;\r\n    grid-row: 1 / 2;\r\n    color: var(--orange-color);\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nexport const CardDescription = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  2 / 3;\r\n`\r\n\r\nexport const CardOrganizer = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  3 / 4;\r\n`\r\n\r\nexport const CardDate = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  4 / 5;\r\n`;\r\n\r\nconst link = `\r\n    text-decoration: none;\r\n    ${text}\r\n    color: var(--add-text-color);\r\n    justify-self: center;\r\n\r\n    &:hover,\r\n    &:focus {\r\n    color: var(--orange-color);\r\n    outline: none;\r\n   }\r\n\r\n`\r\n\r\nexport const StyledRegisterLink = styled(Link)`\r\n    ${link}\r\n    grid-column: 1 / 2;\r\n    grid-row:  5 / 6;  \r\n`\r\nexport const StyledViewLink = styled(Link)`\r\n    ${link}\r\n    grid-column: 2 / 3;\r\n    grid-row:  5 / 6;    \r\n`","import { Card, CardTitle, CardDescription, CardOrganizer, CardDate, StyledRegisterLink, StyledViewLink } from './EventCard.styled';\r\n\r\nconst EventCard = ({event}) => {\r\n    const { _id, title, description, organizer, event_date } = event;\r\n\r\n    const formattedDate = new Date(event_date).toLocaleDateString('dsb-DE', { day:\"numeric\", month:\"numeric\", year:\"numeric\" })\r\n  return (\r\n        <Card key={_id} id={_id}>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n        <CardOrganizer>Organizer: {organizer}</CardOrganizer>\r\n        <CardDate>Date: {formattedDate}</CardDate>\r\n        <StyledRegisterLink to={`/events/${_id}/registration`} id={_id}>Register</StyledRegisterLink>\r\n        <StyledViewLink to={`/events/${_id}/participants`} id={_id}>View</StyledViewLink>\r\n      \r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default EventCard\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 18px;\r\n        margin-bottom: 28px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 20px;\r\n        margin-bottom: 32px;\r\n    }\r\n`","import EventCard from '../EventCard/EventCard';\r\nimport { List } from './EventsList.styled';\r\n\r\nconst EventsList = ({ events, eventsPerPage, page }) => {\r\n\r\n  return (\r\n    <>\r\n    <List>\r\n        {events.slice((page - 1) * eventsPerPage, page * eventsPerPage).map((event) => (\r\n          <EventCard key={event._id} event={event} />\r\n        ))}\r\n      </List>     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default EventsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    alihn-items: center;\r\n    gap: 8px;\r\n\r\n     @media screen and (min-width: 768px) {\r\n        gap: 12px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        gap: 16px;  \r\n    }\r\n`\r\n\r\nconst button = `\r\n    display: inline-block;\r\n    background-color: var(--add-bg-color);\r\n    font-weight: 400;\r\n    font-size: 10px;\r\n    color: var(--add-text-color);\r\n     outline: none;\r\n    border-radius: 6px;\r\n    border: none;\r\n    cursor: pointer;\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 14px;    \r\n    }\r\n`;\r\n\r\nexport const PageBtn = styled.button`\r\n    ${button};\r\n    width: 50px;\r\n    height: 24px;   \r\n\r\n    &:disabled {\r\n    background-color: var(--divider-color);\r\n    cursor: not-allowed;\r\n    }\r\n\r\n     @media screen and (min-width: 768px) {\r\n        width: 70px;\r\n        height: 26px;  \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n         width: 80px;\r\n        height: 30px; \r\n    }\r\n`\r\n\r\nexport const PageNumBtn = styled.button`\r\n    ${button};\r\n    width: 26px;\r\n    height: 24px;\r\n    \r\n     @media screen and (min-width: 768px) {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        width: 30px;\r\n        height: 30px;\r\n    }\r\n`","import { PaginationWrapper, PageBtn, PageNumBtn } from './Pagination.styled';\r\n\r\nconst Pagination = ({page, handleClickNext,  handleClickPrevoius, handlePageSet, totalEvents, eventsPerPage}) => {\r\n    const activePage = page || 1;\r\n    const totalPages = Math.ceil(totalEvents / eventsPerPage);\r\n\r\n    const pages = Array.from({length: totalPages}, (_, index) => index + 1);\r\n\r\n    return (\r\n    <PaginationWrapper>\r\n        <PageBtn type='button' onClick={handleClickPrevoius} disabled={page === 1}>Previous</PageBtn>\r\n\r\n        {pages.map((pageNum) => (\r\n        <PageNumBtn\r\n            key={pageNum}\r\n            onClick={() => handlePageSet(pageNum)}\r\n            style={{ \r\n                backgroundColor: activePage === pageNum  ? '#E59560' : \"#BACEC1\", \r\n            }}\r\n            >\r\n          {pageNum}\r\n        </PageNumBtn>\r\n        ))} \r\n\r\n        <PageBtn type='button' onClick={handleClickNext} disabled={page === totalPages}>Next</PageBtn> \r\n    </PaginationWrapper>\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 16px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        padding: 18px; \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        padding: 24px; \r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    color: var(--text-color);\r\n    margin-bottom: 16px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 20px;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 22px;\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 16px;\r\n\r\n @media screen and (min-width: 768px) {\r\n       flex-direction: row;\r\n       justify-content: space-between;\r\n       margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    color: var(--text-color);\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 18px;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEvents } from '../../redux/events/eventOperations';\r\nimport EventsList from '../../components/EventsList/EventsList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\n\r\nimport { Container, SectionTitle, Wrapper } from './Events.styled';\r\n\r\nconst Events = () => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const events = useSelector((state) => state.events.data);\r\n  const filter = useSelector((state) => state.filter.filter);\r\n\r\n  useEffect(() => {\r\n    dispatch(getEvents())\r\n    setPage(1);\r\n  }, [dispatch, filter]);\r\n\r\n \r\n  const filteredEvents = events.filter((event) =>\r\n    filter ? event.title.toLowerCase().includes(filter) : events  \r\n);\r\n\r\n\r\nlet eventsPerPage = 6;\r\n\r\nconst handleClickNext = () => {\r\n  setPage((prevPage) => prevPage + 1)\r\n}\r\n\r\nconst handleClickPrevoius = () => {\r\n  setPage((prevPage) => prevPage - 1)\r\n}\r\n\r\nconst handlePageSet = (pageNumber) => {\r\n  setPage (pageNumber)\r\n}\r\n\r\n\r\n  return (\r\n    <Container>\r\n     <SectionTitle>Choose the best events</SectionTitle>\r\n     <Wrapper>\r\n     <Filter setPage={setPage} placeholder={'search by title'}/>\r\n     <p>{filteredEvents.length} events are found </p>\r\n     </Wrapper>\r\n     <EventsList events={filteredEvents} page={page} eventsPerPage={eventsPerPage}/>\r\n     {filteredEvents.length > 0 && \r\n    <Pagination page={page} handleClickNext={handleClickNext} handleClickPrevoius={handleClickPrevoius} handlePageSet={handlePageSet} totalEvents={filteredEvents.length} eventsPerPage={eventsPerPage}/>\r\n    }  \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Events;\r\n"],"names":["Input","styled","input","_templateObject","_taggedTemplateLiteral","_ref","placeholder","dispatch","useDispatch","filter","useSelector","state","_jsx","_Fragment","children","onChange","e","setFilter","target","value","text","Card","li","CardTitle","h3","_templateObject2","CardDescription","p","_templateObject3","CardOrganizer","_templateObject4","CardDate","_templateObject5","link","concat","StyledRegisterLink","Link","_templateObject6","StyledViewLink","_templateObject7","event","_id","title","description","organizer","event_date","formattedDate","Date","toLocaleDateString","day","month","year","_jsxs","id","to","List","ul","events","eventsPerPage","page","slice","map","EventCard","PaginationWrapper","div","button","PageBtn","PageNumBtn","handleClickNext","handleClickPrevoius","handlePageSet","totalEvents","activePage","totalPages","Math","ceil","pages","Array","from","length","_","index","type","onClick","disabled","pageNum","style","backgroundColor","Container","SectionTitle","h2","Wrapper","Events","setPage","useState","data","useEffect","getEvents","filteredEvents","toLowerCase","includes","Filter","EventsList","Pagination","prevPage","pageNumber"],"sourceRoot":""}