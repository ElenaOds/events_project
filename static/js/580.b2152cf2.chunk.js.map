{"version":3,"file":"static/js/580.b2152cf2.chunk.js","mappings":"iNAGA,MAAMA,EAAI,sPAcGC,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uXAmBhBC,EAAYJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uSAgBrBI,EAAkBP,EAAAA,GAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kEACjCL,GAKOY,EAAgBV,EAAAA,GAAOQ,EAACG,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kEAC/BL,GAKOc,EAAWZ,EAAAA,GAAOQ,EAACK,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kEAC1BL,GAKAgB,EAAI,qCAAAC,OAEJjB,EAAI,gKAYGkB,GAAqBhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAYkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oEACxCW,GAIOK,GAAiBnB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAYoB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,sEACpCW,G,aCxFN,MAiBA,EAjBkBO,IAAc,IAAb,MAACC,GAAMD,EACtB,MAAM,IAAEE,EAAG,MAAEC,EAAK,YAAEC,EAAW,UAAEC,EAAS,WAAEC,GAAeL,EAErDM,EAAgB,IAAIC,KAAKF,GAAYG,mBAAmB,SAAU,CAAEC,IAAI,UAAWC,MAAM,UAAWC,KAAK,YACjH,OACMC,EAAAA,EAAAA,MAACnC,EAAI,CAAWoC,GAAIZ,EAAIa,SAAA,EACxBC,EAAAA,EAAAA,KAACjC,EAAS,CAAAgC,SAAEZ,KACZa,EAAAA,EAAAA,KAAC9B,EAAe,CAAA6B,SAAEX,KAClBS,EAAAA,EAAAA,MAACxB,EAAa,CAAA0B,SAAA,CAAC,cAAYV,MAC3BQ,EAAAA,EAAAA,MAACtB,EAAQ,CAAAwB,SAAA,CAAC,SAAOR,MACjBS,EAAAA,EAAAA,KAACrB,EAAkB,CAACsB,GAAE,WAAAvB,OAAaQ,EAAG,iBAAiBY,GAAIZ,EAAIa,SAAC,cAChEC,EAAAA,EAAAA,KAAClB,EAAc,CAACmB,GAAE,WAAAvB,OAAaQ,EAAG,iBAAiBY,GAAIZ,EAAIa,SAAC,WANjDb,EAQR,E,MCbJ,MAAMgB,EAAOvC,EAAAA,GAAOwC,GAAEtC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kUC0B7B,EArBmBsC,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,OAAOG,OAOrD,OALEC,EAAAA,EAAAA,YAAU,KACRN,GAASO,EAAAA,EAAAA,KAAY,GACpB,CAACP,KAIJL,EAAAA,EAAAA,KAACE,EAAI,CAAAH,SACFQ,EAAOM,KAAI5B,IAERe,EAAAA,EAAAA,KAACc,EAAS,CAAiB7B,MAAOA,GAAlBA,EAAMC,QAIrB,E,QCtBJ,MAAM6B,EAAYpD,EAAAA,GAAOqD,IAAGnD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4LAYtBmD,EAAetD,EAAAA,GAAOuD,GAAEjD,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4UCArC,EAVeqD,KAGXtB,EAAAA,EAAAA,MAACkB,EAAS,CAAAhB,SAAA,EACTC,EAAAA,EAAAA,KAACiB,EAAY,CAAAlB,SAAC,4BACdC,EAAAA,EAAAA,KAACI,EAAU,M","sources":["components/EventCard/EventCard.styled.js","components/EventCard/EventCard.jsx","components/EventsList/EventsList.styled.js","components/EventsList/EventsList.jsx","pages/Events/Events.styled.js","pages/Events/Events.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color: var(--text-color);\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 18px;    \r\n    }\r\n`;\r\n\r\nexport const Card = styled.li`\r\n    padding: 8px;\r\n    border-radius: 8px;\r\n    background-color: var(--add-bg-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 8px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        gap: 10px;\r\n        padding: 10px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        gap: 12px;\r\n        padding: 16px;   \r\n    }\r\n`\r\n\r\nexport const CardTitle = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    grid-column: 1 / 3;\r\n    grid-row: 1 / 2;\r\n    color: var(--orange-color);\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nexport const CardDescription = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  2 / 3;\r\n`\r\n\r\nexport const CardOrganizer = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  3 / 4;\r\n`\r\n\r\nexport const CardDate = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 3;\r\n    grid-row:  4 / 5;\r\n`;\r\n\r\nconst link = `\r\n    text-decoration: none;\r\n    ${text}\r\n    color: var(--add-text-color);\r\n    justify-self: center;\r\n\r\n    &:hover,\r\n    &:focus {\r\n    color: var(--orange-color);\r\n    outline: none;\r\n   }\r\n\r\n`\r\n\r\nexport const StyledRegisterLink = styled(Link)`\r\n    ${link}\r\n    grid-column: 1 / 2;\r\n    grid-row:  5 / 6;  \r\n`\r\nexport const StyledViewLink = styled(Link)`\r\n    ${link}\r\n    grid-column: 2 / 3;\r\n    grid-row:  5 / 6;    \r\n`","import { Card, CardTitle, CardDescription, CardOrganizer, CardDate, StyledRegisterLink, StyledViewLink } from './EventCard.styled';\r\n\r\nconst EventCard = ({event}) => {\r\n    const { _id, title, description, organizer, event_date } = event;\r\n\r\n    const formattedDate = new Date(event_date).toLocaleDateString('dsb-DE', { day:\"numeric\", month:\"numeric\", year:\"numeric\" })\r\n  return (\r\n        <Card key={_id} id={_id}>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n        <CardOrganizer>Organizer: {organizer}</CardOrganizer>\r\n        <CardDate>Date: {formattedDate}</CardDate>\r\n        <StyledRegisterLink to={`/events/${_id}/registration`} id={_id}>Register</StyledRegisterLink>\r\n        <StyledViewLink to={`/events/${_id}/participants`} id={_id}>View</StyledViewLink>\r\n      \r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default EventCard\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n\r\n    @media screen and (min-width: 760px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        gap: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 20px;\r\n    }\r\n`","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEvents } from '../../redux/events/eventOperations';\r\n\r\nimport EventCard from '../EventCard/EventCard';\r\nimport { List } from './EventsList.styled';\r\n\r\nconst EventsList = () => {\r\n    const dispatch = useDispatch();\r\n    const events = useSelector((state) => state.events.data);\r\n\r\n    useEffect(() => {\r\n      dispatch(getEvents());\r\n    }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <List>\r\n      {events.map(event => {\r\n        return (\r\n          <EventCard key={event._id} event={event}/>\r\n        )\r\n      }\r\n      )}    \r\n    </List>\r\n  )\r\n}\r\n\r\nexport default EventsList\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        padding: 18px; \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        padding: 24px; \r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    color: var(--text-color);\r\n    margin-bottom: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        font-size: 20px;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 22px;\r\n        margin-bottom: 20px;\r\n    }\r\n`","import EventsList from '../../components/EventsList/EventsList';\r\n\r\nimport { Container, SectionTitle } from './Events.styled';\r\n\r\nconst Events = () => {\r\n       \r\n  return (\r\n    <Container>\r\n     <SectionTitle>Choose the best events</SectionTitle>\r\n     <EventsList/>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Events\r\n"],"names":["text","Card","styled","li","_templateObject","_taggedTemplateLiteral","CardTitle","h3","_templateObject2","CardDescription","p","_templateObject3","CardOrganizer","_templateObject4","CardDate","_templateObject5","link","concat","StyledRegisterLink","Link","_templateObject6","StyledViewLink","_templateObject7","_ref","event","_id","title","description","organizer","event_date","formattedDate","Date","toLocaleDateString","day","month","year","_jsxs","id","children","_jsx","to","List","ul","EventsList","dispatch","useDispatch","events","useSelector","state","data","useEffect","getEvents","map","EventCard","Container","div","SectionTitle","h2","Events"],"sourceRoot":""}