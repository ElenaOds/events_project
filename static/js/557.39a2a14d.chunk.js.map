{"version":3,"file":"static/js/557.39a2a14d.chunk.js","mappings":"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","sources":["components/LinkBack/LinkBack.styled.jsx","components/LinkBack/LinkBack.jsx","pages/Registration/schema.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--add-text-color);\r\n   padding: 3px;\r\n   background: var(--add-bg-color);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   \r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n   &:hover,\r\n   &:focus {\r\n    color: var(--add-text-color);\r\n    background: var(--orange-color);\r\n    outline: none;\r\n   }\r\n`","import { StyledLink } from './LinkBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack;","import * as yup from 'yup';\r\n\r\nconst format = /^[A-Za-zА-Яа-яЁёІіЇїЄє '-]+$/;\r\n\r\nconst ValidationSchema = yup.object({\r\n    name: yup.string().matches(format, 'Only letters are allowed').min(3, 'Name should not be shorter than 3 characters').max(25, 'Name should not be longer than 25 characters').required('Please type your full name'),\r\n    email: yup.string().email().required('Please type your email'),\r\n    date: yup.date().required('Please type or select date of birth'),\r\n    info: yup.string().oneOf(['social media', 'friends', 'found myself'], 'Please select the option').required(),\r\n  });\r\n\r\n  export default ValidationSchema;","import styled from 'styled-components';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const Container = styled.div`\r\n    padding: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        padding: 18px; \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        padding: 24px; \r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    color: var(--text-color);\r\n    margin-bottom: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        font-size: 20px;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 22px;\r\n        margin-bottom: 20px;\r\n    }\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    background-color: var(--add-bg-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(1fr);\r\n    gap: 10px;\r\n    max-width: 560px;\r\n    margin: 0 auto;\r\n\r\n\r\n@media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n    padding: 20px 16px;\r\n}\r\n\r\n@media screen and (min-width: 1280px) {\r\n    gap: 18px;\r\n    padding: 32px 16px;\r\n}\r\n`\r\n\r\nconst text = `\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    color: var(--text-color);\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 16px;    \r\n    }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    & > span {\r\n        ${text}\r\n        margin-bottom: 8px;\r\n    }  \r\n`;\r\n\r\n\r\nexport const RadioBtnGroup = styled.label`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 8px;\r\n    justify-items: center;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 4;\r\n    grid-row:  1 / 2;\r\n    justify-self: left;\r\n`;\r\n\r\nexport const RadioBtn = styled.span`\r\n    ${text}\r\n    margin-left: 8px;\r\n`\r\n\r\nexport const Input = styled(Field)`\r\n appearance: none;\r\n-moz-appearance: none;\r\n-webkit-appearance: none;\r\n  padding: 8px 12px;\r\n  height: 100%;\r\n  ${text}\r\n  border-radius: 8px;\r\n  outline: none;\r\n  border: 1px solid ${({ error }) => \r\n   error\r\n  ? 'var(--high-color)'\r\n  : 'var(--divider-color)'};\r\n  margin-bottom: ${({  error  }) => \r\n  error\r\n  ? '4px'\r\n  : '20px'};\r\n\r\n  &::placeholder {\r\n    ${text}\r\n    color: var(--divider-color);\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 1px solid ${({ error }) => \r\n     error\r\n    ? 'var(--high-color)'\r\n    : 'var(--orange-color)'};\r\n  }\r\n`\r\n\r\n\r\nexport const StyledError = styled(ErrorMessage)`\r\n    ${text}\r\n    color: var(--high-color);\r\n    text-align: right;\r\n\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  text-align: center;\r\n  justify-content: center;\r\n  width: 180px;\r\n  height: 40px;\r\n  background-color: var(--orange-color);\r\n  border: none;\r\n  padding: 8px;\r\n  ${text}\r\n  color: var(--add-text-color);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  justify-self: center;\r\n\r\n\r\n&:hover {\r\n  background-color: var(--text-color);\r\n}\r\n\r\n&:disabled {\r\n  background-color: var(--divider-color);\r\n  cursor: not-allowed;\r\n}\r\n`;\r\n","import { useParams, useLocation  } from \"react-router-dom\";\r\nimport {  useSelector, useDispatch  } from 'react-redux';\r\nimport { getRegistration } from '../../redux/participants/participantsOperations';\r\nimport { Formik } from 'formik';\r\n// import { toast } from 'react-toastify';\r\nimport { Field } from 'formik';\r\nimport ValidationSchema from './schema';\r\nimport LinkBack from '../../components/LinkBack/LinkBack';\r\n\r\nimport { Container, SectionTitle, StyledForm, StyledError, Input, Label, Button,\r\n   Text, RadioBtnGroup, RadioBtn,\r\n} from './Registration.styled';\r\n\r\n\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  birthdate: '',\r\n  info: '',\r\n}\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { _id } = useParams();\r\n  const events = useSelector((state) => state.events.data);\r\n  const event = events.find(event => event._id === _id);\r\n  // const participants = useSelector((state) => state.participants.list);\r\n\r\n  // const handleSubmit = (values, {resetForm}) => {\r\n  //   const newParticipant:\r\n  //   dispatch(getRegistration({ ...participants,  values }));\r\n   \r\n  //   resetForm();\r\n  // }\r\n\r\n  const handleSubmit = (values, {resetForm}) => {\r\n   \r\n    dispatch(getRegistration({values}));\r\n    // toast.success(\"Event is created\");\r\n    resetForm();\r\n    console.log(values)\r\n  \r\n    }\r\n\r\n  const backLinkHref = location.state?.from ?? \"/events\";\r\n\r\n  return (\r\n     <Container>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n\r\n   <SectionTitle>{event.title} registration</SectionTitle>\r\n\r\n     <Formik \r\n        initialValues={initialValues} \r\n        validationSchema={ValidationSchema}\r\n        onSubmit={handleSubmit}>\r\n         {(props) => (\r\n        <StyledForm autoComplete=\"off\">\r\n        <Label htmlFor=\"name\"><span>Full name</span>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\" \r\n          id=\"name\"\r\n          placeholder=\"full name\"\r\n          onBlur={props.handleBlur}\r\n          error={props.touched.name && props.errors.name}\r\n        />\r\n        <StyledError name='name' component=\"div\"/>\r\n      </Label>\r\n      <Label htmlFor=\"email\"><span>Email</span>\r\n        <Input\r\n        type=\"email\"\r\n        name=\"email\" \r\n        id=\"email\"\r\n        placeholder=\"email\"\r\n        onBlur={props.handleBlur}\r\n        error={props.touched.email && props.errors.email}\r\n      />\r\n      <StyledError name='email' component=\"div\"/>\r\n      </Label>\r\n      <Label htmlFor=\"birthdate\"><span>Birthdate</span>\r\n        <Input \r\n        type=\"date\"\r\n        name=\"birthdate\" \r\n        id=\"birthdate\"\r\n        placeholder=\"birthdate\"\r\n        onBlur={props.handleBlur}\r\n        error={props.touched.birthdate && props.errors.birthdate}\r\n      />\r\n       <StyledError name='birthdate' component=\"div\"/>\r\n      </Label>\r\n      \r\n      \r\n   <RadioBtnGroup id=\"info\" role=\"group\">\r\n      <Text>Where did you hear about this event?</Text>\r\n      <label>\r\n        <Field \r\n        type=\"radio\" \r\n        name=\"info\" \r\n        value=\"social media\" \r\n  \r\n        />\r\n        <RadioBtn>Social media</RadioBtn>\r\n\r\n      </label> \r\n       <label>\r\n        <Field \r\n        type=\"radio\" \r\n        name=\"info\" \r\n        value=\"friends\" \r\n  \r\n          />\r\n        <RadioBtn>Friends</RadioBtn>\r\n      </label>\r\n      <label>\r\n      <Field \r\n      type=\"radio\" \r\n      name=\"info\" \r\n      value=\"found myself\" \r\n\r\n      />\r\n      <RadioBtn>Found myself</RadioBtn> \r\n      </label> \r\n       \r\n      </RadioBtnGroup>  \r\n\r\n      <Button type=\"submit\"\r\n      // disabled={!(props.dirty && props.isValid)}\r\n      >Submit</Button>\r\n        </StyledForm>\r\n         )}\r\n    </Formik>  \r\n \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Registration;\r\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","backLinkHref","_jsx","to","children","yup","name","matches","min","max","required","email","date","info","oneOf","Container","div","SectionTitle","h2","_templateObject2","StyledForm","Form","_templateObject3","text","Label","label","_templateObject4","RadioBtnGroup","_templateObject5","Text","p","_templateObject6","RadioBtn","span","_templateObject7","Input","Field","_templateObject8","error","_ref2","_ref3","StyledError","ErrorMessage","_templateObject9","Button","button","_templateObject10","initialValues","birthdate","Registration","_location$state$from","_location$state","dispatch","useDispatch","location","useLocation","_id","useParams","event","useSelector","state","events","data","find","from","_jsxs","LinkBack","title","Formik","validationSchema","ValidationSchema","onSubmit","handleSubmit","values","resetForm","getRegistration","console","log","props","autoComplete","htmlFor","type","id","placeholder","onBlur","handleBlur","touched","errors","component","role","value"],"sourceRoot":""}