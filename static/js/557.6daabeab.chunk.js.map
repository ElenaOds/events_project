{"version":3,"file":"static/js/557.6daabeab.chunk.js","mappings":"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","sources":["components/LinkBack/LinkBack.styled.jsx","components/LinkBack/LinkBack.jsx","pages/Registration/schema.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--add-text-color);\r\n   padding: 3px;\r\n   background: var(--add-bg-color);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   \r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n   &:hover,\r\n   &:focus {\r\n    color: var(--add-text-color);\r\n    background: var(--orange-color);\r\n    outline: none;\r\n   }\r\n`","import { StyledLink } from './LinkBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack;\r\n\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Name is required'),\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    birthdate: Yup.date().required('Birth date is required'),\r\n    info: Yup.string().oneOf(['social media', 'friends', 'found myself'], 'Please select the option').required('Please select the option'),\r\n  });\r\n\r\n  export default validationSchema;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 16px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        padding: 18px; \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        padding: 24px; \r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    color: var(--text-color);\r\n    margin-bottom: 16px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 20px;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 22px;\r\n        margin-bottom: 20px;\r\n    }\r\n`\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    background-color: var(--add-bg-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(1fr);\r\n    gap: 10px;\r\n    max-width: 560px;\r\n    margin: 0 auto;\r\n\r\n\r\n@media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n    padding: 20px 16px;\r\n}\r\n\r\n@media screen and (min-width: 1280px) {\r\n    gap: 18px;\r\n    padding: 32px 16px;\r\n}\r\n`\r\n\r\nconst text = `\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    color: var(--text-color);\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 16px;    \r\n    }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    & > span {\r\n        ${text}\r\n        margin-bottom: 8px;\r\n    }  \r\n`;\r\n\r\n\r\nexport const RadioBtnGroup = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 12px 8px;\r\n    justify-items: center;\r\n`\r\nexport const RadioError = styled.div`\r\n    grid-column: 2 / 4;\r\n    grid-row:  3 / 4;\r\n    justify-self: right;\r\n    color: var(--high-color);\r\n`\r\n\r\nexport const Text = styled.p`\r\n    ${text}\r\n    grid-column: 1 / 4;\r\n    grid-row:  1 / 2;\r\n    justify-self: left;\r\n`;\r\n\r\nexport const RadioBtn = styled.span`\r\n    ${text}\r\n    margin-left: 8px;\r\n`\r\n\r\nexport const Input = styled.input`\r\n appearance: none;\r\n-moz-appearance: none;\r\n-webkit-appearance: none;\r\n  padding: 8px 12px;\r\n  height: 100%;\r\n  ${text}\r\n  border-radius: 8px;\r\n  outline: none;\r\n    border: 1px solid ${({ touched, error }) =>\r\n    touched && error \r\n   ? 'var(--high-color)' \r\n   : 'var(--divider-color)'};\r\n \r\n\r\n\r\n  margin-bottom: ${({  touched, error  }) => \r\n    touched && error\r\n    ? '4px'\r\n    : '20px'};\r\n  \r\n\r\n\r\n\r\n  &::placeholder {\r\n    ${text}\r\n    color: var(--divider-color);\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 1px solid ${({ touched, error }) => \r\n    touched && error\r\n    ? 'var(--high-color)'\r\n    : 'var(--orange-color)'};\r\n  }\r\n`\r\n\r\n\r\nexport const StyledError = styled.div`\r\n    ${text}\r\n    color: var(--high-color);\r\n    text-align: right;\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  text-align: center;\r\n  justify-content: center;\r\n  width: 180px;\r\n  height: 40px;\r\n  background-color: var(--orange-color);\r\n  border: none;\r\n  padding: 8px;\r\n  ${text}\r\n  color: var(--add-text-color);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  justify-self: center;\r\n\r\n\r\n&:hover {\r\n  background-color: var(--text-color);\r\n}\r\n\r\n&:disabled {\r\n  background-color: var(--divider-color);\r\n  cursor: not-allowed;\r\n}\r\n`;\r\n","import { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport {  useSelector, useDispatch  } from 'react-redux';\r\nimport { getRegistration } from '../../redux/participants/participantsOperations';\r\nimport { useFormik } from 'formik'; \r\nimport { toast } from 'react-toastify';\r\nimport validationSchema from './schema';\r\nimport LinkBack from '../../components/LinkBack/LinkBack';\r\n\r\nimport { Container, SectionTitle, StyledForm, Label, Input, Button, RadioBtnGroup, RadioBtn, Text, StyledError, RadioError } from './Registration.styled';\r\n\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { _id } = useParams();\r\n  const events = useSelector((state) => state.events.data);\r\n  const event = events.find(event => event._id === _id);\r\n\r\n  const initialValues = {\r\n    name: '',\r\n    email: '',\r\n    birthdate: '',\r\n    info: '',\r\n  };\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      dispatch(getRegistration({ _id: event._id, newParticipant: values }));\r\n      formik.resetForm(); \r\n      toast.success(\"Participant is registered\");\r\n      navigate(`/events`, { replace: true });\r\n    },\r\n  });\r\n\r\n\r\n  const backLinkHref = location.state?.from ?? \"/events\";\r\n\r\n  return (\r\n     <Container>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n\r\n   <SectionTitle>{event.title} registration</SectionTitle>\r\n\r\n<StyledForm onSubmit={formik.handleSubmit} autoComplete=\"off\">\r\n        <Label htmlFor=\"name\"><span>Full name</span>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.errors.name}\r\n            touched={formik.touched.name}\r\n          />\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <StyledError>{formik.errors.name}</StyledError>\r\n          ) : null}\r\n        </Label>\r\n        <Label htmlFor=\"email\"><span>Email</span>\r\n          <Input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.errors.email}\r\n            touched={formik.touched.email}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <StyledError>{formik.errors.email}</StyledError>\r\n          ) : null}\r\n        </Label>\r\n        <Label htmlFor=\"birthdate\"><span>Date of birth</span>\r\n          <Input\r\n            type=\"date\"\r\n            id=\"birthdate\"\r\n            name=\"birthdate\"\r\n            placeholder=\"Enter your birthdate\"\r\n            value={formik.values.birthdate}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.errors.birthdate}\r\n            touched={formik.touched.birthdate}\r\n          />\r\n          {formik.touched.birthdate && formik.errors.birthdate ? (\r\n            <StyledError>{formik.errors.birthdate}</StyledError>\r\n          ) : null}\r\n        </Label>\r\n        <RadioBtnGroup>\r\n          <Text>Where did you hear about this event?</Text>\r\n          <label htmlFor=\"info\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"social-media\"\r\n              name=\"info\"\r\n              value=\"social media\"\r\n              checked={formik.values.info === 'social media'}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.errors.info}\r\n              touched={formik.touched.info}\r\n            />\r\n            <RadioBtn>Social media</RadioBtn>\r\n          </label>\r\n          <label htmlFor=\"info\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"friends\"\r\n              name=\"info\"\r\n              value=\"friends\"\r\n              checked={formik.values.info === 'friends'}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.errors.info}\r\n              touched={formik.touched.info}\r\n            />\r\n            <RadioBtn>Friends</RadioBtn>\r\n          </label>\r\n          <label htmlFor=\"info\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"found-myself\"\r\n              name=\"info\"\r\n              value=\"found myself\"\r\n              checked={formik.values.info === 'found myself'}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.errors.info}\r\n              touched={formik.touched.info}\r\n            />\r\n            <RadioBtn>Found myself</RadioBtn>\r\n          </label>\r\n          {formik.touched.info && formik.errors.info ? (\r\n            <RadioError>{formik.errors.info}</RadioError>\r\n          ) : null}\r\n        </RadioBtnGroup>\r\n\r\n        <Button type=\"submit\">Register</Button>\r\n      </StyledForm>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Registration;\r\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","backLinkHref","_jsx","to","children","Yup","name","required","email","birthdate","info","oneOf","Container","div","SectionTitle","h2","_templateObject2","StyledForm","form","_templateObject3","text","Label","label","_templateObject4","RadioBtnGroup","_templateObject5","RadioError","_templateObject6","Text","p","_templateObject7","RadioBtn","span","_templateObject8","Input","input","_templateObject9","touched","error","_ref2","_ref3","StyledError","_templateObject10","Button","button","_templateObject11","Registration","_location$state$from","_location$state","dispatch","useDispatch","location","useLocation","navigate","useNavigate","_id","useParams","event","useSelector","state","events","data","find","formik","useFormik","initialValues","validationSchema","onSubmit","values","getRegistration","newParticipant","resetForm","toast","success","replace","from","_jsxs","LinkBack","title","handleSubmit","autoComplete","htmlFor","type","id","placeholder","value","onChange","handleChange","onBlur","handleBlur","errors","checked"],"sourceRoot":""}