{"version":3,"file":"static/js/557.810d9531.chunk.js","mappings":"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","sources":["components/LinkBack/LinkBack.styled.jsx","components/LinkBack/LinkBack.jsx","pages/Registration/schema.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--add-text-color);\r\n   padding: 3px;\r\n   background: var(--add-bg-color);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   \r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n   &:hover,\r\n   &:focus {\r\n    color: var(--add-text-color);\r\n    background: var(--orange-color);\r\n    outline: none;\r\n   }\r\n`","import { StyledLink } from './LinkBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack;","import * as yup from 'yup';\r\n\r\nconst format = /^[A-Za-zА-Яа-яЁёІіЇїЄє '-]+$/;\r\n\r\nconst ValidationSchema = yup.object({\r\n    name: yup.string().matches(format, 'Only letters are allowed').min(3, 'Name should not be shorter than 3 characters').max(25, 'Name should not be longer than 25 characters').required('Please type your full name'),\r\n    email: yup.string().email().required('Please type your email'),\r\n    date: yup.date().required('Please type or select date of birth'),\r\n    priority: yup.string().oneOf(['social media', 'friends', 'found myseld'], 'Please select the option').required(),\r\n  });\r\n\r\n  export default ValidationSchema;","import styled from 'styled-components';\r\nimport { Form } from 'formik';\r\n\r\nexport const Container = styled.div`\r\n    padding: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        padding: 18px; \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        padding: 24px; \r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    color: var(--text-color);\r\n    margin-bottom: 16px;\r\n\r\n    @media screen and (min-width: 1768px) {\r\n        font-size: 20px;\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 22px;\r\n        margin-bottom: 20px;\r\n    }\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    background-color: var(--add-bg-color);\r\n    display: grid;\r\n    grid-template-columns: repeat(1fr);\r\n    gap: 10px;\r\n    max-width: 560px;\r\n    margin: 0 auto;\r\n\r\n@media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n    padding: 16px;\r\n}\r\n\r\n@media screen and (min-width: 1280px) {\r\n    gap: 12px;\r\n    padding: 16px;   \r\n}\r\n`","import { useParams, useLocation  } from \"react-router-dom\";\r\nimport {  useSelector, useDispatch  } from 'react-redux';\r\nimport { createRegistration } from '../../redux/eventOperations';\r\nimport { Formik } from 'formik';\r\nimport { toast } from 'react-toastify';\r\nimport { Field } from 'formik';\r\n\r\nimport ValidationSchema from './schema';\r\nimport LinkBack from '../../components/LinkBack/LinkBack';\r\n\r\nimport { Container, SectionTitle, StyledForm } from './Registration.styled';\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  birthdate: '',\r\n  info: ''\r\n}\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { _id } = useParams();\r\n  const events = useSelector((state) => state.events.data);\r\n  const event = events.find(event => event._id === _id);\r\n\r\n\r\n\r\n  const handleSubmit = (values, {resetForm}) => {\r\n  const updatedEvent = { ...event, participants: values };\r\n  dispatch(createRegistration(updatedEvent));\r\n  toast.success(\"Event is created\");\r\n  resetForm();\r\n\r\n  }\r\n\r\n  const backLinkHref = location.state?.from ?? \"/events\";\r\n\r\n  return (\r\n    <Container>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n\r\n      <SectionTitle>{event.title} registration</SectionTitle>\r\n      <Formik \r\n        initialValues={initialValues} \r\n        validationSchema={ValidationSchema}\r\n        onSubmit={handleSubmit}>\r\n        \r\n        <StyledForm>\r\n        <label htmlFor=\"name\"><span>Full name</span>\r\n        <Field as=\"textarea\"\r\n        name=\"name\" \r\n        placeholder=\"Full name\"\r\n      />\r\n      </label>\r\n      <label htmlFor=\"email\"><span>Email</span>\r\n        <Field as=\"textarea\"\r\n        name=\"email\" \r\n        placeholder=\"email\"\r\n      />\r\n      </label>\r\n      <label htmlFor=\"birthdate\"><span>Birthdate</span>\r\n        <Field \r\n        type=\"date\"\r\n        name=\"birthdate\" \r\n        placeholder=\"birthdate\"\r\n      />\r\n      </label>\r\n      <div id=\"info\" role=\"group\">\r\n    <p>Where did you hear about this event?</p>\r\n    <label>\r\n      <Field type=\"radio\" name=\"info\" value=\"social media\" />\r\n              Social media\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"info\" value=\"friends\" />\r\n              Friends\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"info\" value=\"found myself\" />\r\n              Found myself\r\n            </label>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n        </StyledForm>\r\n    </Formik>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Registration\r\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","backLinkHref","_jsx","to","children","yup","name","matches","min","max","required","email","date","priority","oneOf","Container","div","SectionTitle","h2","_templateObject2","StyledForm","Form","_templateObject3","initialValues","birthdate","info","Registration","_location$state$from","_location$state","dispatch","useDispatch","location","useLocation","_id","useParams","event","useSelector","state","events","data","find","from","_jsxs","LinkBack","title","Formik","validationSchema","ValidationSchema","onSubmit","handleSubmit","values","resetForm","updatedEvent","participants","createRegistration","toast","success","htmlFor","Field","as","placeholder","type","id","role","value"],"sourceRoot":""}